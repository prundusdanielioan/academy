name: Deploy to cPanel via FTP Only (Simple)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, sqlite3
        coverage: none
        
    - name: Install dependencies
      run: composer install --no-dev --optimize-autoloader --no-interaction
      
    - name: Build assets
      run: |
        npm ci
        npm run build
        
    - name: Create .env file for production
      run: |
        cp .env.example .env
        # Update production settings
        sed -i 's/APP_ENV=local/APP_ENV=production/' .env
        sed -i 's/APP_DEBUG=true/APP_DEBUG=false/' .env
        sed -i 's|APP_URL=http://lms.local:8000|APP_URL=https://self-learn.ro|' .env
        sed -i 's|ASSET_URL=http://lms.local:8000|ASSET_URL=https://self-learn.ro|' .env
        sed -i 's/FORCE_HTTPS=false/FORCE_HTTPS=true/' .env
        
    - name: Create setup script for Laravel commands
      run: |
        cat > setup.php << 'EOF'
        <?php
        // Laravel Setup Script
        echo "<h2>Laravel Setup</h2>";
        
        // Check if we're in the right directory
        if (!file_exists('artisan')) {
            echo "‚ùå Not in Laravel directory!";
            exit;
        }
        
        echo "‚úÖ In Laravel directory<br>";
        
        // Run commands
        $commands = [
            'php artisan migrate --force',
            'php artisan config:cache',
            'php artisan route:cache',
            'php artisan view:cache'
        ];
        
        foreach ($commands as $command) {
            echo "<br>Running: $command<br>";
            $output = shell_exec($command . ' 2>&1');
            echo "<pre>$output</pre>";
        }
        
        // Set permissions
        echo "<br>Setting permissions...<br>";
        exec('chmod -R 755 storage 2>&1', $output);
        echo "<pre>" . implode("\n", $output) . "</pre>";
        
        exec('chmod -R 755 bootstrap/cache 2>&1', $output);
        echo "<pre>" . implode("\n", $output) . "</pre>";
        
        echo "<br>‚úÖ Setup complete!";
        echo "<br><br><strong>IMPORTANT:</strong> Delete this file after running!";
        ?>
        EOF
        
    - name: Deploy via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        server-dir: /public_html/self-learn.ro/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.github/**
          **/tests/**
          **/*.md
          **/*.sh
          **/*.mp4
          **/phpunit.xml
          **/.env.example
          
    - name: Deployment Complete
      run: |
        echo "üéâ Deployment completed successfully!"
        echo "üìã Next steps:"
        echo "1. Go to https://self-learn.ro/setup.php"
        echo "2. Run the Laravel setup commands"
        echo "3. Delete the setup.php file"
        echo "4. Test your site at https://self-learn.ro"
