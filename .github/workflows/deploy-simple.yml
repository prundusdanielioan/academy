name: Deploy to cPanel (Simple)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, sqlite3
        coverage: none
        
    - name: Install dependencies
      run: composer install --no-dev --optimize-autoloader --no-interaction
      
    - name: Build assets (if using Vite)
      run: |
        npm ci
        npm run build
        
    - name: Deploy via SCP (Direct copy)
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.CPANEL_HOST }}
        username: ${{ secrets.CPANEL_USERNAME }}
        key: ${{ secrets.CPANEL_SSH_KEY }}
        port: 22
        source: "app,bootstrap,config,database,public,resources,routes,storage,vendor,artisan,composer.json,composer.lock,.env.example"
        target: "/home/${{ secrets.CPANEL_USERNAME }}/public_html/self-learn.ro/"
        strip_components: 0
        
    - name: Post-deployment setup
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.CPANEL_HOST }}
        username: ${{ secrets.CPANEL_USERNAME }}
        key: ${{ secrets.CPANEL_SSH_KEY }}
        port: 22
        script: |
          cd /home/${{ secrets.CPANEL_USERNAME }}/public_html/self-learn.ro
          
          # Set proper permissions
          chmod -R 755 storage
          chmod -R 755 bootstrap/cache
          
          # Generate application key if needed
          if [ ! -f .env ]; then
            cp .env.example .env
            php artisan key:generate
          fi
          
          # Run migrations
          php artisan migrate --force
          
          # Cache configuration
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          
          echo "Deployment completed successfully!"
